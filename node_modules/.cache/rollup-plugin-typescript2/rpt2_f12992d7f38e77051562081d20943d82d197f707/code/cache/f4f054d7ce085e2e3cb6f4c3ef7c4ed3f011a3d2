{"code":"import { WorkerAPIs } from '../BaseDefinitions';\r\nimport { IfcAPI } from 'web-ifc';\r\nexport class WebIfcWorker {\r\n    constructor(worker, serializer) {\r\n        this.worker = worker;\r\n        this.serializer = serializer;\r\n        this.API = WorkerAPIs.webIfc;\r\n        this.webIFC = new IfcAPI();\r\n        this.worker.initializeAPI(this.webIFC);\r\n    }\r\n    async Init(data) {\r\n        await this.webIFC.Init();\r\n        this.worker.post(data);\r\n    }\r\n    ;\r\n    async Close(data) {\r\n        this.nullifyWebIfc();\r\n        this.webIFC = new IfcAPI();\r\n        await this.webIFC.Init();\r\n        this.worker.post(data);\r\n    }\r\n    ;\r\n    async DisposeWebIfc(data) {\r\n        this.nullifyWebIfc();\r\n        this.worker.post(data);\r\n    }\r\n    CloseModel(data) {\r\n        this.webIFC.CloseModel(data.args.modelID);\r\n        this.worker.post(data);\r\n    }\r\n    CreateModel(data) {\r\n        data.result = this.webIFC.CreateModel(data.args.settings);\r\n        this.worker.post(data);\r\n    }\r\n    ExportFileAsIFC(data) {\r\n        data.result = this.webIFC.ExportFileAsIFC(data.args.modelID);\r\n        this.worker.post(data);\r\n    }\r\n    FlattenLine(data) {\r\n        this.webIFC.FlattenLine(data.args.modelID, data.args.line);\r\n        this.worker.post(data);\r\n    }\r\n    GetAllLines(data) {\r\n        const vector = this.webIFC.GetAllLines(data.args.modelID);\r\n        data.result = this.serializer.serializeVector(vector);\r\n        this.worker.post(data);\r\n    }\r\n    GetAndClearErrors(data) {\r\n        const vector = this.webIFC.GetAndClearErrors(data.args.modelID);\r\n        data.result = this.serializer.serializeVector(vector);\r\n        this.worker.post(data);\r\n    }\r\n    GetCoordinationMatrix(data) {\r\n        data.result = this.webIFC.GetCoordinationMatrix(data.args.modelID);\r\n        this.worker.post(data);\r\n    }\r\n    GetFlatMesh(data) {\r\n        const flatMesh = this.webIFC.GetFlatMesh(data.args.modelID, data.args.expressID);\r\n        data.result = this.serializer.serializeFlatMesh(flatMesh);\r\n        this.worker.post(data);\r\n    }\r\n    GetGeometry(data) {\r\n        const ifcGeometry = this.webIFC.GetGeometry(data.args.modelID, data.args.geometryExpressID);\r\n        data.result = this.serializer.serializeIfcGeometry(ifcGeometry);\r\n        this.worker.post(data);\r\n    }\r\n    GetIndexArray(data) {\r\n        data.result = this.webIFC.GetIndexArray(data.args.ptr, data.args.size);\r\n        this.worker.post(data);\r\n    }\r\n    GetLine(data) {\r\n        const args = data.args;\r\n        try {\r\n            data.result = this.webIFC.GetLine(args.modelID, args.expressID, args.flatten);\r\n        }\r\n        catch (e) {\r\n            console.log(`There was a problem getting the properties of the item ${args.expressID}`);\r\n            data.result = {};\r\n        }\r\n        this.worker.post(data);\r\n    }\r\n    GetLineIDsWithType(data) {\r\n        const vector = this.webIFC.GetLineIDsWithType(data.args.modelID, data.args.type);\r\n        data.result = this.serializer.serializeVector(vector);\r\n        this.worker.post(data);\r\n    }\r\n    GetRawLineData(data) {\r\n        data.result = this.webIFC.GetRawLineData(data.args.modelID, data.args.expressID);\r\n        this.worker.post(data);\r\n    }\r\n    GetVertexArray(data) {\r\n        data.result = this.webIFC.GetVertexArray(data.args.ptr, data.args.size);\r\n        this.worker.post(data);\r\n    }\r\n    IsModelOpen(data) {\r\n        data.result = this.webIFC.IsModelOpen(data.args.modelID);\r\n        this.worker.post(data);\r\n    }\r\n    LoadAllGeometry(data) {\r\n        const flatMeshVector = this.webIFC.LoadAllGeometry(data.args.modelID);\r\n        data.result = this.serializer.serializeFlatMeshVector(flatMeshVector);\r\n        this.worker.post(data);\r\n    }\r\n    OpenModel(data) {\r\n        data.result = this.webIFC.OpenModel(data.args.data, data.args.settings);\r\n        this.worker.post(data);\r\n    }\r\n    SetGeometryTransformation(data) {\r\n        this.webIFC.SetGeometryTransformation(data.args.modelID, data.args.transformationMatrix);\r\n        this.worker.post(data);\r\n    }\r\n    SetWasmPath(data) {\r\n        this.webIFC.SetWasmPath(data.args.path);\r\n        this.worker.post(data);\r\n    }\r\n    StreamAllMeshes(data) {\r\n        const serializer = this.serializer.serializeFlatMesh;\r\n        const callback = (result) => this.worker.postCallback(data, result, serializer);\r\n        this.webIFC.StreamAllMeshes(data.args.modelID, callback);\r\n    }\r\n    StreamAllMeshesWithTypes(data) {\r\n        const args = data.args;\r\n        const serializer = this.serializer.serializeFlatMesh;\r\n        const callback = (result) => this.worker.postCallback(data, result, serializer);\r\n        this.webIFC.StreamAllMeshesWithTypes(args.modelID, args.types, callback);\r\n    }\r\n    WriteLine(data) {\r\n        const modelID = data.args.modelID;\r\n        const serializedObject = data.args.lineObject;\r\n        const object = this.webIFC.GetLine(modelID, serializedObject.expressID);\r\n        Object.keys(serializedObject).forEach(propName => {\r\n            if (object[propName] !== undefined) {\r\n                object[propName] = serializedObject[propName];\r\n            }\r\n        });\r\n        this.webIFC.WriteLine(data.args.modelID, object);\r\n        this.worker.post(data);\r\n    }\r\n    WriteRawLineData(data) {\r\n        this.webIFC.WriteRawLineData(data.args.modelID, data.args.data);\r\n        this.worker.post(data);\r\n    }\r\n    getSubArray(data) {\r\n        const args = data.args;\r\n        this.webIFC.getSubArray(args.heap, args.startPtr, args.sizeBytes);\r\n        this.worker.post(data);\r\n    }\r\n    GetNameFromTypeCode(data) {\r\n        data.result = this.webIFC.GetNameFromTypeCode(data.args.modelID);\r\n        this.worker.post(data);\r\n    }\r\n    GetIfcEntityList(data) {\r\n        data.result = this.webIFC.GetIfcEntityList(data.args.modelID);\r\n        this.worker.post(data);\r\n    }\r\n    GetTypeCodeFromName(data) {\r\n        data.result = this.webIFC.GetTypeCodeFromName(data.args.typeName);\r\n        this.worker.post(data);\r\n    }\r\n    nullifyWebIfc() {\r\n        this.webIFC = null;\r\n    }\r\n}\r\n//# sourceMappingURL=WebIfcWorker.js.map","references":["/Users/simquat/Development/web-ifc-three/web-ifc-three/src/IFC/web-workers/BaseDefinitions.ts","/Users/simquat/Development/web-ifc-three/node_modules/web-ifc/web-ifc-api-node.d.ts","/Users/simquat/Development/web-ifc-three/web-ifc-three/src/IFC/web-workers/serializer/Serializer.ts"],"map":"{\"version\":3,\"file\":\"WebIfcWorker.js\",\"sourceRoot\":\"\",\"sources\":[\"../../../../../../../src/IFC/web-workers/workers/WebIfcWorker.ts\"],\"names\":[],\"mappings\":\"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\"}"}
