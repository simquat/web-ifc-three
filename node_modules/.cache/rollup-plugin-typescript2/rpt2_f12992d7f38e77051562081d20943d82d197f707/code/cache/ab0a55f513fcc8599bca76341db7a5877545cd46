{"code":"import { IFCBUILDING } from 'web-ifc';\r\nimport { geometryTypes } from \"./GeometryTypes\";\r\nexport class PropertySerializer {\r\n    dispose() {\r\n        this.webIfc = null;\r\n    }\r\n    constructor(webIfc) {\r\n        this.webIfc = webIfc;\r\n    }\r\n    async serializeAllProperties(modelID, maxSize, event) {\r\n        const blobs = [];\r\n        await this.getPropertiesAsBlobs(modelID, blobs, maxSize, event);\r\n        return blobs;\r\n    }\r\n    async getPropertiesAsBlobs(modelID, blobs, maxSize, event) {\r\n        const geometriesIDs = await this.getAllGeometriesIDs(modelID);\r\n        let properties = await this.initializePropertiesObject(modelID);\r\n        const allLinesIDs = await this.webIfc.GetAllLines(modelID);\r\n        const linesCount = allLinesIDs.size();\r\n        let lastEvent = 0.1;\r\n        let counter = 0;\r\n        for (let i = 0; i < linesCount; i++) {\r\n            const id = allLinesIDs.get(i);\r\n            if (!geometriesIDs.has(id)) {\r\n                await this.getItemProperty(modelID, id, properties);\r\n                counter++;\r\n            }\r\n            if (maxSize && counter > maxSize) {\r\n                blobs.push(new Blob([JSON.stringify(properties)], { type: 'application/json' }));\r\n                properties = {};\r\n                counter = 0;\r\n            }\r\n            if (event && i / linesCount > lastEvent) {\r\n                event(i, linesCount);\r\n                lastEvent += 0.1;\r\n            }\r\n        }\r\n        blobs.push(new Blob([JSON.stringify(properties)], { type: 'application/json' }));\r\n    }\r\n    async getItemProperty(modelID, id, properties) {\r\n        try {\r\n            const props = await this.webIfc.GetLine(modelID, id);\r\n            if (props.type) {\r\n                props.type = this.webIfc.GetNameFromTypeCode(props.type);\r\n            }\r\n            this.formatItemProperties(props);\r\n            properties[id] = props;\r\n        }\r\n        catch (e) {\r\n            console.log(`There was a problem getting the properties of the item with ID ${id}`);\r\n        }\r\n    }\r\n    formatItemProperties(props) {\r\n        Object.keys(props).forEach((key) => {\r\n            const value = props[key];\r\n            if (value && value.value !== undefined)\r\n                props[key] = value.value;\r\n            else if (Array.isArray(value))\r\n                props[key] = value.map((item) => {\r\n                    if (item && item.value)\r\n                        return item.value;\r\n                    return item;\r\n                });\r\n        });\r\n    }\r\n    async initializePropertiesObject(modelID) {\r\n        return {\r\n            coordinationMatrix: await this.webIfc.GetCoordinationMatrix(modelID),\r\n            globalHeight: await this.getBuildingHeight(modelID)\r\n        };\r\n    }\r\n    async getBuildingHeight(modelID) {\r\n        const building = await this.getBuilding(modelID);\r\n        let placement;\r\n        const siteReference = building.ObjectPlacement.PlacementRelTo;\r\n        if (siteReference)\r\n            placement = siteReference.RelativePlacement.Location;\r\n        else\r\n            placement = building.ObjectPlacement.RelativePlacement.Location;\r\n        const transform = placement.Coordinates.map((coord) => coord.value);\r\n        return transform[2];\r\n    }\r\n    async getBuilding(modelID) {\r\n        const allBuildingsIDs = await this.webIfc.GetLineIDsWithType(modelID, IFCBUILDING);\r\n        const buildingID = allBuildingsIDs.get(0);\r\n        return this.webIfc.GetLine(modelID, buildingID, true);\r\n    }\r\n    async getAllGeometriesIDs(modelID) {\r\n        const geometriesIDs = new Set();\r\n        const geomTypesArray = Array.from(geometryTypes);\r\n        for (let i = 0; i < geomTypesArray.length; i++) {\r\n            const category = geomTypesArray[i];\r\n            const ids = await this.webIfc.GetLineIDsWithType(modelID, category);\r\n            const idsSize = ids.size();\r\n            for (let j = 0; j < idsSize; j++) {\r\n                geometriesIDs.add(ids.get(j));\r\n            }\r\n        }\r\n        return geometriesIDs;\r\n    }\r\n}\r\n//# sourceMappingURL=PropertySerializer.js.map","references":["/Users/simquat/Development/web-ifc-three/node_modules/web-ifc/web-ifc-api-node.d.ts","/Users/simquat/Development/web-ifc-three/web-ifc-three/src/IFC/BaseDefinitions.ts","/Users/simquat/Development/web-ifc-three/web-ifc-three/src/IFC/components/properties/GeometryTypes.ts"],"map":"{\"version\":3,\"file\":\"PropertySerializer.js\",\"sourceRoot\":\"\",\"sources\":[\"../../../../../../../src/IFC/components/properties/PropertySerializer.ts\"],\"names\":[],\"mappings\":\"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\"}"}
